


                                  redis



Selected config:
Port           : 6379
Config file    : /etc/redis/6379.conf
Log file       : /var/log/redis_6379.log
Data dir       : /var/lib/redis/6379
Executable     : /usr/local/bin/redis-server
Cli Executable : /usr/local/bin/redis-cli

~]# ss -tunlp | grep 6379

     set  变量名    数据  /     mset 字段名1 数据1  字段名2 数据2

        get  变量名 /    mget  字段名1  字段名2
       
           keys *  /   keys ??? (任意三个字符)

                select  0 (0~15)    切换库

           exists  变量名   ( 0不存在 / 1 存在 )  变量是否存在值

            ttl  变量名  (-1  永不过期/ 0~9999 时间限定 ) 变量值存在时间
                                              /-2 已过期  被删除/


               set 变量类型 默认是字符 变量名相同 数据替换最新
  
                     type  变量名   检测 变量类型
                            
                     move  变量名  库名  改变变量库位置   
 
                      del  变量名   删变量值

                      flushdb   清空当前库中所有变量
  
                      flushall  清空所有库所有数据

                          save   保存数据

                       shutdown  停数据
 

-------------------------------------------------------------------------------------------------------------------


                      内存优化   redis使用的是 内存存储最后再存入磁盘

              MAXmemory
 565 # volatile-lru -> Evict using approximated LRU among the keys with an expire set.
                     只针对 设置了过期时间的数据
                                           删除最近最少使用的变量

 566 # allkeys-lru -> Evict any key using approximated LRU.
                       对所有变量 执行删除最少使用的变量


 567 # volatile-lfu -> Evict using approximated LFU among the keys with an expire set.
                删除 内存中 有时间限制的 访问频率较少的变量


 568 # allkeys-lfu -> Evict any key using approximated LFU.
                             删除所有变量中使用最少的
 569 # volatile-random -> Remove a random key among the ones with an expire set.   
                               有过期时间中 随机删
 570 # allkeys-random -> Remove a random key, any key.
                           随机删除
 571 # volatile-ttl -> Remove the key with the nearest expire time (minor TTL) 
                    删除要过期的变量
 572 # noeviction -> Don't evict anything, just return an error on write operations.


 560 # maxmemory <bytes>          定义内容最大存储空间



591 # maxmemory-policy noeviction   内存清除策略 (规则)


 602 # maxmemory-samples 5   选取key模板的策略
                                       删除频率最少/删除快要过期的




501 # requirepass foobared           //密码


]# redis-cli -h 192.168.4.50 -p 6350   -a 密码
                           指定密码             指定端口号      指定密码 (进入时可以不指定)
                                                                            但进入后 无法执行命令 任需密码

]# redis-cli -h 192.168.4.50 -p 6350 -a 123456 shutdown
                         //停机命令
由于修改了 端口 . IP地址 和密码 所以原先的 脚本停止命令将不可用
]# /etc/init.d/redis_6379 stop
                             //端口 查找不到   &  IP地址 查找不到





部署LNMP+Redis
yum -y install gcc pcre-devel zlib-devel
yum -y install php-fpm
rpm -q php php-devel
rpm -q automake autoconf
yum -y install php php-devel automake autoconf
cd nginx-1.12.2/    ./configure
cd phpredis-2.2.4/   phpize
 ./configure --with-php-config=/usr/bin/php-config

]#yum  -y  install  gcc    pcre-devel   zlib-devel  //安装依赖
]#tar  -zxvf  nginx-1.12.2.tar.gz  //解压
]#cd nginx-1.12.2  //进源码目录
]#./configure  //配置

nginx-1.12.2]# make && make install    //编译安装


]# ls /usr/local  //查看安装目录
]# ls /usr/local/nginx  //查看目录列表
]#yum   -y     install  php-fpm  //安装php-fpm

修改配置nginx.conf
] # vim   +65  /usr/local/nginx/conf/nginx.conf
      location ~ \.php$ {
              root           html;
              fastcgi_pass   127.0.0.1:9000;
              fastcgi_index  index.php;
              include        fastcgi.conf;
       }

启动php-fpm服务
]#  /usr/local/nginx/sbin/nginx  -t     //测试修改
 test is successful

    ]#  systemctl  start php-fpm  //启动服务
    ]#  netstat  -utnlp  | grep  :9000  //查看端口

启动nginx服务
]# /usr/local/nginx/sbin/nginx
]# netstat  -utnlp  | grep  :80
0 0.0.0.0:80

测试配置
]# vim  /usr/local/nginx/html/test.php  //编写php文件
  <?php
            echo  "hello world!!!";
    ?>

 ]# curl  http://localhost/test.php     //访问nginx服务
                    hello world!!!

配置PHP支持redis
安装php扩展
配置PHP支持redis-----------------------------------

]# rpm -q php php-devel
]# rpm -q automake autoconf
未安装软件包 php

]# yum -y  install php php-devel automake autoconf //安装依赖

]# tar -zxf php-redis-2.2.4.tar.gz //安装扩展包
]# cd phpredis-2.2.4/
]# phpize            //生成配置文件php-config及 configure命令
PHP Api Version:         20100412
Zend Module Api No:      20100525
Zend Extension Api No:   220100525

]# ./configure  --with-php-config=/usr/bin/php-config //配置
]# make //编译
]# make install //安装



修改php.ini文件----------------------------------------------------

]#vim /etc/php.ini
728 extension_dir = "/usr/lib64/php/modules/"  //模块文件目录
730 extension = "redis.so"  //模块文件名
                       //此处修改全面

]# systemctl  restart php-fpm //重启php-fpm服务
]# php -m | grep  -i redis     //查看已加载的模块
redis
访问网站脚本--------------------------------------------------
 [root@host50 ~]# netstat -utnlp  | grep redis-server
                                192.168.4.50:6350

测试配置：编写网站脚本，把数据存储到redis服务器192.168.4.50-----------
查看192.168.4.50主机的redis服务是否运行-------------------------------
]# redis-cli -h 192.168.4.50 -p 6350 -a 123456 //访问服务
192.168.4.50:6350> ping
PONG
编写网站脚本----------------------------------------------------------
]# vim  /usr/local/nginx/html/linkredis.php
<?php
$redis = new redis();
$redis->connect("192.168.4.50","6350");
$redis->auth("123456");
$redis->set("linux","redhat");
echo $redis->get("linux");
?>
访问网站脚本--------------------------------------------------------------------
]#curl  http://localhost/linkredis.php      //访问nginx服务
   redhat   
在192.168.4.50 服务器，查看数据-----------------------------------------------
]# redis-cli -h 192.168.4.50 -p 6350 -a 123456 //连接redis服务
192.168.4.50:6350> keys *   //查看变量
1) "linux"
192.168.4.50:6350> 
192.168.4.50:6350> get linux //获取值
"redhat"
192.168.4.50:6350> 






